from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.types import InputFile
from aiogram.utils import executor
import dateBase1 as lbr
import sqlite3 as sq
import os
import pandas as pd
import time
import datetime
import asyncio
import aioconsole

Code = "L29"
proxy_url = 'http://proxy.server:3128'

if Code[0] == "T":
    bot = Bot(token="6871609784:AAF5M0toDxiEps8Rs0ibB6kcRaF7IfBLpnI", proxy=proxy_url) # –ë–æ—Ç –¢–µ—Å—Ç—ã
elif Code == "L14":
    bot = Bot(token="6321164079:AAFhVkhIPXkc9OmOBb3cgK-P4HoMb3tSpqg", proxy=proxy_url) # –ë–æ—Ç 14 –õ–∏—Ü–µ–π
elif Code == "L29":
    bot = Bot(token="7405779446:AAEZr8G4xvly2U0JU4kyUx-0fjmgFAae1z8", proxy=proxy_url) # –ë–æ—Ç 29 –õ–∏—Ü–µ–π
dp = Dispatcher(bot)

bot.delete_webhook()
if Code[1:] == "14":
    lbr.connect(os.path.realpath('db_14_lyceum_bot.db'))
if Code[1:] == "29":
    lbr.connect(os.path.realpath('db_29_lyceum_bot.db'))


sss = '‚ÄºÔ∏è‚ÄºÔ∏è–í–Ω–∏–º–∞–Ω–∏–µ‚ÄºÔ∏è‚ÄºÔ∏è'
Develobers = [1, 2]

cnt = 0
cnt_Global = 0



print(lbr.getData(1, "ID", '''AlreadySelected = 1 OR AlreadySelected = "1"'''))
async def log_to_excel(IdList):

    file_path = os.path.realpath('menu.xlsx')
    print(file_path)
    print(IdList)
    data = {
        "–ß–µ–ª–æ–≤–µ–∫": [],
        "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 1": [],
        "–í—Ç–æ—Ä–Ω–∏–∫ 1": [],
        "–°—Ä–µ–¥–∞ 1": [],
        "–ß–µ—Ç–≤–µ—Ä–≥ 1": [],
        "–ü—è—Ç–Ω–∏—Ü–∞ 1": [],
        "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 2": [],
        "–í—Ç–æ—Ä–Ω–∏–∫ 2": [],
        "–°—Ä–µ–¥–∞ 2": [],
        "–ß–µ—Ç–≤–µ—Ä–≥ 2": [],
        "–ü—è—Ç–Ω–∏—Ü–∞ 2": [],
        "–õ—å–≥–æ—Ç–∞": []
    }
    change = {1:"‚úì", 0:"X", "-":"    "}
    for Id in IdList:
        data["–ß–µ–ª–æ–≤–µ–∫"].append(f"{lbr.getData(1, 'Klass', Id)[0]}{lbr.getData(1, 'KlassLit', Id)[0]} {lbr.getData(1, 'Name', Id)[0]}")
        data["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 1"].append(change[lbr.getData(2, '11', Id)[0]])
        data["–í—Ç–æ—Ä–Ω–∏–∫ 1"].append(change[lbr.getData(2, '12', Id)[0]])
        data["–°—Ä–µ–¥–∞ 1"].append(change[lbr.getData(2, '13', Id)[0]])
        data["–ß–µ—Ç–≤–µ—Ä–≥ 1"].append(change[lbr.getData(2, '14', Id)[0]])
        data["–ü—è—Ç–Ω–∏—Ü–∞ 1"].append(change[lbr.getData(2, '15', Id)[0]])
        data["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 2"].append(change[lbr.getData(2, '21', Id)[0]])
        data["–í—Ç–æ—Ä–Ω–∏–∫ 2"].append(change[lbr.getData(2, '22', Id)[0]])
        data["–°—Ä–µ–¥–∞ 2"].append(change[lbr.getData(2, '23', Id)[0]])
        data["–ß–µ—Ç–≤–µ—Ä–≥ 2"].append(change[lbr.getData(2, '24', Id)[0]])
        data["–ü—è—Ç–Ω–∏—Ü–∞ 2"].append(change[lbr.getData(2, '25', Id)[0]])
        data["–õ—å–≥–æ—Ç–∞"].append(change[lbr.getData(2, 'free', Id)[0]])
    print(data)

    df = pd.DataFrame(data)

    with pd.ExcelWriter(file_path, mode="a", engine="openpyxl",if_sheet_exists="overlay",) as writer:
        df = df.sort_values('–ß–µ–ª–æ–≤–µ–∫')
        df.style.set_properties(**{'border': '1.3px solid black', 'color': 'black'}).to_excel(writer, sheet_name="–°—Ç–æ–ª–æ–≤–∞—è",index=False)
        print(IdList, "->", file_path)

    return file_path

class UserClass:
    def __init__(self, ID, ChatID = -100):
        if ChatID != -100:
            self.ChatID = ChatID
            self.ID = lbr.getUserId(self.ChatID)
        else:
            self.ID = ID
            self.ChatID =lbr.getData(1, "ChatID", self.ID)[0]
        if self.ID != -1:
            self.Name = lbr.getData(1, "Name", self.ID)[0]
            self.AlreadySelected = lbr.getData(1, "AlreadySelected", self.ID)[0]
            self.Admin = lbr.getData(1, "Admin", self.ID)[0]
            self.Klass = lbr.getData(1, "Klass", self.ID)[0]
            self.KlassLit = lbr.getData(1, "KlassLit", self.ID)[0]
            self.AlreadyRegistraate = lbr.getData(1, "AlreadyRegistraate", self.ID)[0]
            self.Mode = lbr.getData(1, "Mode", self.ID)[0]
            self.Inf = lbr.getData(1, "Inf", self.ID)[0]
        else:
            self.Name = "F"
            self.AlreadySelected = -1
            self.Admin = -1
            self.Klass = -1
            self.KlassLit = "F"
            self.AlreadyRegistraate = -1
            self.Mode = -1
            self.Inf = -1
    async def update(self):
        self.ID = lbr.getUserId(self.ChatID)
        if self.ID != -1:
            self.Name = lbr.getData(1, "Name", self.ID)[0]
            self.AlreadySelected = lbr.getData(1, "AlreadySelected", self.ID)[0]
            self.Admin = lbr.getData(1, "Admin", self.ID)[0]
            self.Klass = lbr.getData(1, "Klass", self.ID)[0]
            self.KlassLit = lbr.getData(1, "KlassLit", self.ID)[0]
            self.AlreadyRegistraate = lbr.getData(1, "AlreadyRegistraate", self.ID)[0]
            self.Mode = lbr.getData(1, "Mode", self.ID)[0]
            self.Inf = lbr.getData(1, "Inf", self.ID)[0]
    async def print_(self):
        print("Information for user: ChatID -", self.ChatID)
        if self.ID != -1:
            print("ID -", self.ID)
            print("Name -", self.Name)
            print("Klass -", self.Klass, self.KlassLit)
            print("Admin -", self.Admin)
            print("Mode -", self.Mode)
            print("Inf -", self.Inf)
            print("AlreadySelected -", self.AlreadySelected)
            print("AlreadyRegistraate -", self.AlreadyRegistraate)
        else:
            print("User not registered")
admins = []
adminsChatID = []

@dp.message_handler(commands=["ping"])
async def pingLoad(message):
    await bot.send_message(message.chat.id, "PING")
    global cnt_Global
    cnt_Global += 1


@dp.message_handler(content_types = ['text'])
async def textLoad(message, stop = False):
    if stop:
        raise RuntimeError("Fall by command")
    try:
        global admins
        global cnt_Global
        global adminsChatID
        User = UserClass(ChatID=message.chat.id, ID=0)
        User.print_()

        if User.ID in Develobers:
            if User.Mode == -2:
                lbr.writeData(1, "Mode", 0, User.ID)
                User.update()
            if User.Admin == 0:
                lbr.writeData(1, "Admin", 1, User.ID)
                User.update()
        text = message.text
        print("WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW",User.ID, User.Name, ":", text)
        admins = lbr.getData(1, "ID", "`Admin` = 1")
        adminsChatID = lbr.getData(1, "ChatID", "`Admin` = 1")
        if message.chat.type == 'private':
            if text == "/stop" and User.ID != -1 and User.Mode != -2:
                await bot.send_message(User.ChatID, "–û–∫")
                lbr.writeData(1, "Mode", 0, User.ID)
                User.update()
            # –ù–æ–≤—ã–π —é–∑–µ—Ä
            if text == "/start":
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å–µ–±–µ")
                item2 = types.KeyboardButton("–í—ã–±—Ä–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã")
                markup.add(item1, item2)
                await bot.send_message(User.ChatID, f"üëã–ü—Ä–∏–≤–µ—Çüëã, —è –±–æ—Ç - —Å—Ç–æ–ª–æ–≤–∞—è, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –≥—Ä—É–ø–ø–æ–π 'it-cub' \nhttps://t.me/ITcubeDevelopers\n–í—Å–µ –∫–æ–º–∞–Ω–¥—ã /help ", reply_markup=markup)
                lbr.writeData(1, "Username", message.from_user.username, User.ID)


            if User.ID == -1:
                User.print_()
                lbr.writeData(1, 'ChatID', User.ChatID)
                User.update()
                User.print_()
                await bot.send_message(User.ChatID, f"–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –ø—Ä–æ–π–¥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.")

            # –ë–∞–Ω
            elif (User.Mode == -2):
                await bot.send_message(User.ChatID,  "–ú–æ–ª–∏ —É –∞–¥–º–∏–Ω–æ–≤ –ø—Ä–æ—â–µ–Ω–∏—è!")
            # –°—Ç–∞–Ω–¥–∞—Ä—Ç
            elif (User.Mode == 0):
                lbr.writeData(1, "Username", message.from_user.username, User.ID)
                if User.AlreadyRegistraate == 1 and text != "/set" and text != "–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å–µ–±–µ":
                    lbr.writeData(1, "Username", message.from_user.username, User.ID)
                    if text == '/help':
                        help = "/set - –∏–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å–µ–±–µ" \
                            "\n/select - –≤—ã–±—Ä–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã" \
                            "\n/help - –∏ —Ç–∞–∫ –ø–æ–Ω—è—Ç–Ω–æ"
                        if User.Admin:
                            help = "–û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n" + help + "\n–ê–¥–º–∏–Ω:" \
                                                                    "\n/reMenu - –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç" \
                                                                    "\n/reMenuAll - –æ–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ –º–µ–Ω—é" \
                                                                    "\n/ivent - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ" \
                                                                    "\n/exel - exel —Ç–∞–±–ª–∏—Ü–∞"\
                                                                    "\n/ban - –ë–ê–ù!!!"\
                                                                    "\n/unban - —Ä–∞–∑–±–∞–Ω"\
                                                                    "\n/write - –ø–∏—Å–∞—Ç—å –≤ –±–¥"\
                                                                    "\n/reed - —á–∏—Ç–∞—Ç—å –∏–∑ –±–¥"\
                                                                    "\n/banList - —Å–ø–∏—Å–æ–∫ –∑–∞–±–∞–Ω–µ–Ω—ã—Ö"\
                                                                    "\n/pingGo - –≤–∫–ª/–≤—ã–∫–ª –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π ping"\
                                                                    "\n/stat - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"

                        await bot.send_message(User.ChatID, help)
                    elif User.AlreadySelected == 0 or text == "/select" or text == "–í—ã–±—Ä–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã":
                        lbr.writeData(1, "Username", message.from_user.username, User.ID)
                        if User.AlreadySelected == 0:
                            await bot.send_message(User.ChatID, '–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –º–µ–Ω—é, –ø—Ä–µ–¥–ª–∞–≥–∞—é —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ —Å–µ–π—á–∞—Å')
                        lbr.writeData(1, "Mode", 3, User.ID)
                        User.update()
                        await textLoad(message)
                    elif User.Admin:
                        if text == "/ivent":
                            lbr.writeData(1, "Mode", 4, User.ID)
                            lbr.writeData(1, "Inf", "1|-1|F", User.ID)
                            await bot.send_message(User.ChatID, "–û–∫, –Ω–∞–ø–∏—à–∏—Ç–µ ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏–ª–∏ -1 –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º")
                        elif text == "/reMenu":
                            lbr.writeData(1, "Mode", 5, User.ID)
                            lbr.writeData(1, "Inf", "1|-1|F", User.ID)
                            await bot.send_message(User.ChatID, "–û–∫, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è (WDV)")
                        elif text == "/reMenuAll":
                            lbr.writeData(1, "Mode", 6, User.ID)
                            lbr.writeData(1, "Inf", "0|", User.ID)
                            await bot.send_message(User.ChatID, "–û–∫, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∞ 111 (WDV)")
                        elif text == "/exel":
                            print("exel")
                            filepath = await log_to_excel(lbr.getData(1, "ID", '''AlreadySelected = 1 OR AlreadySelected = "1"'''))
                            with open(filepath, 'rb') as f1:
                                await bot.send_document(message.chat.id, f1)
                        elif text == "/ban":
                            IDList = lbr.getData(1, "ID")
                            sps = '–í—ã–±–µ—Ä–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–∞–Ω–∞ (–Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä/ID):'
                            for id in IDList:
                                SelectUser = UserClass(ID=id)
                                sps = sps + f'''\n{id} - {"!–ê–î–ú–ò–ù!" if SelectUser.Admin else ""} {SelectUser.Name} {SelectUser.Klass}{SelectUser.KlassLit} '''
                            await bot.send_message(User.ChatID, sps)
                            lbr.writeData(1, "Mode", 7, User.ID)
                            lbr.writeData(1, "Inf", "1|-1|-1", User.ID)
                        elif text == "/unban":
                            IDList = lbr.getData(1, "ID", "`Mode` = -2")
                            sps = '–í—ã–±–µ—Ä–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–±–∞–Ω–∞ (–Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä/ID):'
                            for id in IDList:
                                SelectUser = UserClass(ID=id)
                                sps = sps + f'''\n{id} - {"!–ê–î–ú–ò–ù!" if SelectUser.Admin else ""} {SelectUser.Name} {SelectUser.Klass}{SelectUser.KlassLit} '''
                            await bot.send_message(User.ChatID, sps)
                            lbr.writeData(1, "Mode", 8, User.ID)
                            lbr.writeData(1, "Inf", "1|-1|-1", User.ID)
                        elif text == "/banList":
                            IDList = lbr.getData(1, "ID", "`Mode` = -2")
                            sps = '–°–ø–∏—Å–æ–∫ –∑–∞–±–∞–Ω–µ–Ω—ã—Ö:'
                            if IDList != []:
                                for id in IDList:
                                    SelectUser = UserClass(ID=id)
                                    sps = sps + f'''\n{id} - {"!–ê–î–ú–ò–ù!" if SelectUser.Admin else ""} {SelectUser.Name} {SelectUser.Klass}{SelectUser.KlassLit} '''
                            else:
                                sps = sps + "\n–¢–∞–∫–∏—Ö –Ω–µ—Ç"
                            await bot.send_message(User.ChatID, sps)
                        elif text == "/write":
                            lbr.writeData(1, "Mode", 9, User.ID)
                            lbr.writeData(1, "Inf", "1|-1|F|F|F", User.ID)
                            await bot.send_message(User.ChatID, "–í—ã–±–µ—Ä–µ—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: \n1 - Users\n2 - Select\n3 - Data")
                        elif text == "/reed":
                            lbr.writeData(1, "Mode", 10, User.ID)
                            lbr.writeData(1, "Inf", "1|-1", User.ID)
                            await bot.send_message(User.ChatID, "–í—ã–±–µ—Ä–µ—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: \n1 - Users\n2 - Select\n3 - Data")
                        elif text == "/pingGo":
                            if lbr.getData(3, "Value", '''ID = "PID"''') != []:
                                pingsID = str(lbr.getData(3, "Value", '''ID = "PID"''')[0]).split("|")
                            else:
                                pingsID = []
                            if str(User.ID) in pingsID:
                                pingsID.remove(str(User.ID))
                                await bot.send_message(User.ChatID, "–†–µ–∂–∏–º –ø–∏–Ω–≥–∞ üîï–≤—ã–∫–ª—é—á–µ–Ωüîï")
                            else:
                                if pingsID != [""]:
                                    pingsID.append(str(User.ID))
                                else:
                                    pingsID = [str(User.ID)]
                                await bot.send_message(User.ChatID, "–†–µ–∂–∏–º –ø–∏–Ω–≥–∞ üîî–≤–∫–ª—é—á–µ–Ωüîî")
                            print(pingsID)
                            lbr.writeData(3, "Value", '|'.join(pingsID), '''ID = "PID"''')
                        elif text == "/stat":
                            timeProg = int(time.time() - start_time)/60
                            await bot.send_message(User.ChatID, f"–°—Ç–∞–±–∏–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ {cnt_Global} –∑–∞–ø—Ä–æ—Å–æ–≤."
                                      f"\n–í—Ä–µ–º—è —Å–æ —Å—Ç–∞—Ä—Ç–∞:"
                                      f"\n{int(timeProg//60//24)} —Å—É—Ç."
                                      f"\n{int(timeProg//60%24)} —á–∞—Å–æ–≤."
                                      f"\n{float(timeProg%60):2.2} –º–∏–Ω—É—Ç.")

                else:
                    keyboard = InlineKeyboardMarkup(row_width=2)
                    keyboard.add(
                        InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –ò–º—è", callback_data=f'{User.ID} change Name'),
                        InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –ö–ª–∞—Å—Å", callback_data=f'{User.ID} change Klass')
                    )
                    if User.Name != "F" and User.Klass != -1:
                        keyboard = InlineKeyboardMarkup(row_width=2)
                        keyboard.add(
                        InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –ò–º—è", callback_data=f'{User.ID} change Name'),
                        InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –ö–ª–∞—Å—Å", callback_data=f'{User.ID} change Klass'),
                        InlineKeyboardButton(text="–ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è/–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", callback_data=f'{User.ID} change end')
                        )
                        await bot.send_message(User.ChatID, f"–¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ:"
                                                f"\n–ò–º—è - {User.Name if User.Name != 'F' else '–ù–µ —É–∫–∞–∑–∞–Ω–Ω–æ'}"
                                                f"\n–ö–ª–∞—Å—Å - {f'{User.Klass}{User.KlassLit}' if User.Klass != -1 else '–ù–µ —É–∫–∞–∑–∞–Ω–Ω–æ'}",
                                    reply_markup=keyboard)
                    else:
                        await bot.send_message(User.ChatID, f"–¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ:"
                                                f"\n–ò–º—è - {User.Name if User.Name != 'F' else '–ù–µ —É–∫–∞–∑–∞–Ω–Ω–æ'}"
                                                f"\n–ö–ª–∞—Å—Å - {f'{User.Klass}{User.KlassLit}' if User.Klass != -1 else '–ù–µ —É–∫–∞–∑–∞–Ω–Ω–æ'}",
                                    reply_markup=keyboard)
            elif (User.Mode == 1):
                if len(text.split()) == 2:
                    lbr.writeData(1, "Name", text, User.ID)
                    User.update()
                    await bot.send_message(User.ChatID, "–û–ö")
                    lbr.writeData(1, "Mode", 0, User.ID)
                    await textLoad(message)
                else:
                    await bot.send_message(User.ChatID, "–û—à–∏–±–∫–∞ –ø—Ä–µ–¥—Å—Ç–≤–∞–≤–ª–µ–Ω–∏—è")
            elif (User.Mode == 2):
                if len(text) == 2:
                    if text[0].isdigit() and text[1] in "–ê–ë–í–ì–î–ï–ñ–ó–ò–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–≠–Æ–Ø":
                        lbr.writeData(1, "Klass", text[0], User.ID)
                        lbr.writeData(1, "KlassLit", text[1], User.ID)
                        User.update()

                        lbr.writeData(1, "Mode", 0, User.ID)
                        await bot.send_message(User.ChatID, "–û–ö")
                        await textLoad(message)
                    else:
                        await bot.send_message(User.ChatID, "–û—à–∏–±–∫–∞ –ø—Ä–µ–¥—Å—Ç–≤–∞–≤–ª–µ–Ω–∏—è")
                else:
                    await bot.send_message(User.ChatID, "–û—à–∏–±–∫–∞ –ø—Ä–µ–¥—Å—Ç–≤–∞–≤–ª–µ–Ω–∏—è")
            elif (User.Mode == 3):
                    if User.AlreadySelected == 0:
                        keyboard = InlineKeyboardMarkup(row_width=1)
                        keyboard.add(
                        InlineKeyboardButton(text="–Ø –±–µ—Å–ø–ª–∞—Ç–Ω–∏–∫", callback_data=f'{User.ID} select free 1'),
                        InlineKeyboardButton(text="–Ø –ø–ª–∞—Ç–Ω–∏–∫", callback_data=f'{User.ID} select free 0'))
                        await bot.send_message(User.ChatID, f'–í–µ–±–µ—Ä–µ—Ç–µ:', reply_markup=keyboard)

                    else:
                        day = 1
                        week = 1
                        # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –∏ –Ω–æ–º–µ—Ä–∞ –Ω–µ–¥–µ–ª–∏
                        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
                        today = datetime.datetime.now().date()
                        # \–û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–æ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è 1 —Å–µ–Ω—Ç—è–±—Ä—è —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞
                        start_date = datetime.date(today.year, 9, 1)
                        # –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏, –Ω–∞—á–∏–Ω–∞—è —Å 1 —Å–µ–Ω—Ç—è–±—Ä—è
                        week_num = (today - start_date).days // 7 + 1
                        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
                        day_num = today.weekday() + 1
                        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π —ç—Ç–æ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
                        if week_num % 2 == 1:
                            if day_num == 1:
                                print("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 1-–π –Ω–µ–¥–µ–ª–∏")
                                day = 1
                                week = 1
                            elif day_num == 2:
                                print("–í—Ç–æ—Ä–Ω–∏–∫ 1-–π –Ω–µ–¥–µ–ª–∏")
                                day = 2
                                week = 1
                            elif day_num == 3:
                                print("–°—Ä–µ–¥–∞ 1-–π –Ω–µ–¥–µ–ª–∏")
                                day = 3
                                week = 1
                            elif day_num == 4:
                                print("–ß–µ—Ç–≤–µ—Ä–≥ 1-–π –Ω–µ–¥–µ–ª–∏")
                                day = 4
                                week = 1
                            elif day_num == 5:
                                print("–ü—è—Ç–Ω–∏—Ü–∞ 1-–π –Ω–µ–¥–µ–ª–∏")
                                day = 5
                                week = 1
                            elif day_num == 6:
                                print("–°—É–±–±–æ—Ç–∞ 1-–π –Ω–µ–¥–µ–ª–∏")
                                day = 1
                                week = 2
                            elif day_num == 7:
                                print("–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ 1-–π –Ω–µ–¥–µ–ª–∏")
                                day = 1
                                week = 2
                        else:
                            if day_num == 1:
                                print("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 2-–π –Ω–µ–¥–µ–ª–∏")
                                day = 1
                                week = 2
                            elif day_num == 2:
                                print("–í—Ç–æ—Ä–Ω–∏–∫ 2-–π –Ω–µ–¥–µ–ª–∏")
                                day = 2
                                week = 2
                            elif day_num == 3:
                                print("–°—Ä–µ–¥–∞ 2-–π –Ω–µ–¥–µ–ª–∏")
                                day = 3
                                week = 2
                            elif day_num == 4:
                                print("–ß–µ—Ç–≤–µ—Ä–≥ 2-–π –Ω–µ–¥–µ–ª–∏")
                                day = 4
                                week = 2
                            elif day_num == 5:
                                print("–ü—è—Ç–Ω–∏—Ü–∞ 2-–π –Ω–µ–¥–µ–ª–∏")
                                day = 5
                                week = 2
                            elif day_num == 6:
                                print("–°—É–±–±–æ—Ç–∞ 2-–π –Ω–µ–¥–µ–ª–∏")
                                day = 1
                                week = 1
                            elif day_num == 7:
                                print("–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ 2-–π –Ω–µ–¥–µ–ª–∏")
                                day = 1
                                week = 1

                            if day == 0:
                                day = 1
                        keyboard = InlineKeyboardMarkup(row_width = 3)
                        lbr.writeData(1, "Username", message.from_user.username, User.ID)
                        keyboard.add(
                        InlineKeyboardButton(text="—Å—É–ø",callback_data=f'{User.ID} select {week}{day} 1'),
                        InlineKeyboardButton(text="–±–µ–∑ —Å—É–ø–∞",callback_data=f'{User.ID} select {week}{day} 0'),
                        InlineKeyboardButton(text="–ù–µ –æ–±–µ–¥–∞—é", callback_data=f'{User.ID} select {week}{day} -'),
                                            InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f'{User.ID} select {week}{day} nazad'))

                        await bot.send_message(User.ChatID, f'–í–µ–±–µ—Ä–µ—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç {week} –Ω–µ–¥. {day} –¥–µ–Ω—å:'
                                                    f'\n–°–£–ü - {lbr.getData(3, "Value", week*100 + day*10 + 1)[0]}'
                                                    f'\n–ë–õ–Æ–î–û - {lbr.getData(3, "Value", week*100 + day*10 + 2)[0]}', reply_markup=keyboard)
                        days = 6
            elif (User.Mode == 4):
                inf = str(User.Inf).split("|")
                stad = inf[0]
                data = inf[1:]
                if stad == "1":
                    data[0] = text
                    if data[1] == "F":
                        lbr.writeData(1, "Inf", f"2|{'|'.join(data)}", User.ID)
                        await bot.send_message(User.ChatID, "–û–ö, —Ç–µ–ø–µ—Ä—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è")
                    else:
                        lbr.writeData(1, "Inf", f'''3|{'|'.join(data)}''', User.ID)
                elif stad == "2":
                    data[1] = text
                    lbr.writeData(1, "Inf", f'''3|{'|'.join(data)}''', User.ID)
                User.update()
                inf = str(User.Inf).split("|")
                stad = inf[0]
                data = inf[1:]
                if stad == "3":
                    if data[0] == "-1":
                        Send_to = lbr.getData(1, "ChatID")
                    else:
                        Send_to = lbr.getData(1, "ChatID", data[0])
                    print(Send_to)
                    if Send_to != []:
                        lbr.writeData(1, "Inf", -1, User.ID)
                        lbr.writeData(1, "Mode", 0, User.ID)
                        for Chat in Send_to:
                            await bot.send_message(Chat, f'''–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n{data[1]}''')
                    else:
                        await bot.send_message(User.ChatID, "–ü–æ–ª—É—á–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç(\n–ò–∑–º–µ–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–π")
                        lbr.writeData(1, "Inf", f'''1|{'|'.join(data)}''', User.ID)
            elif (User.Mode == 5):
                data = str(User.Inf).split("|")
                print(data)
                if int(data[0]) == 1:
                    data[1] = text
                    if data[2] == "F":
                        await bot.send_message(User.ChatID, "–û–∫, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç (–±–ª—é–¥–æ/—Å—É–ø)")
                        data[0] = '2'
                        lbr.writeData(1, "Inf", '|'.join(data), User.ID)
                    else:
                        lbr.writeData(1, "Inf", '|'.join(data), User.ID)
                        User.update()
                elif int(data[0]) == 2:
                    data[2] = text
                    data[0] = '3'
                    lbr.writeData(1, "Inf", '|'.join(data), User.ID)
                    User.update()
                data = str(User.Inf).split("|")
                if int(data[0]) == 3:
                    lbr.writeData(3, "Value", data[2], data[1])
                    await bot.send_message(User.ChatID, "–£—Å–ø–µ—à–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ")
                    lbr.writeData(1, "Mode", 0, User.ID)
                    lbr.writeData(1, "Inf", -1, User.ID)
            elif (User.Mode == 6):
                if Code[1:] == "14":
                    vars, days = 3, 5
                elif Code[1:] == "29":
                    vars, days = 2, 6
                data = str(User.Inf).split("|")
                dayCnt = int(data[0]) // vars
                day = dayCnt % days + 1
                weak = dayCnt // days + 1
                var = (int(data[0]) % vars) + 1
                print(data[0], "->", dayCnt, var)
                print(f"{weak}{day}{var} <-", text)
                lbr.writeData(3, "Value", text, f"{weak}{day}{var}")
                data[0] = str(int(data[0]) + 1)
                dayCnt = int(data[0]) // vars
                day = dayCnt % days + 1
                weak = dayCnt // days + 1
                var = (int(data[0]) % vars) + 1

                lbr.writeData(1, "Inf", "|".join(data), User.ID)
                if weak == 3:
                    await bot.send_message(User.ChatID, f"–û–∫, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞e–≤–µ—Ä—à–µ–Ω–æ")
                    lbr.writeData(1, "Mode", 0, User.ID)
                    lbr.writeData(1, "Inf", "-1", User.ID)
                else:
                    await bot.send_message(User.ChatID, f"–û–∫, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∞ {weak}{day}{var} (WDV)")
            elif (User.Mode == 7):
                data = str(User.Inf).split("|")

                if lbr.getData(1, "ID", text) != []:
                    data[1] = text
                    data[0] = str(2)
                    print( "|".join(data), "->", "Inf", User.ID)
                    lbr.writeData(1, "Inf", "|".join(data), User.ID)
                    keyboard = InlineKeyboardMarkup(row_width=2)
                    keyboard.add(
                    InlineKeyboardButton(text="–∞–Ω–∞–Ω–∏–º–Ω–æ",callback_data=f'{User.ID} ban 1 1'),
                    InlineKeyboardButton(text="–Ω–µ –∞–Ω–∞–Ω–∏–º–Ω–æ",callback_data=f'{User.ID} ban 0 1'))
                    await bot.send_message(User.ChatID, '–ö–∞–∫ –∑–∞–±–∞–Ω–∏—Ç—å?', reply_markup=keyboard)
                else:
                    await bot.send_message(User.ChatID, 'ID –Ω–µ–≤–µ—Ä–µ–Ω')
            elif (User.Mode == 8):
                data = str(User.Inf).split("|")
                if lbr.getData(1, "ID", text) != []:
                    data[1] = text
                    data[0] = str(2)
                    print(data)
                    lbr.writeData(1, "Inf", "|".join(data), User.ID)
                    keyboard = InlineKeyboardMarkup(row_width=2)
                    keyboard.add(
                    InlineKeyboardButton(text="–∞–Ω–∞–Ω–∏–º–Ω–æ",callback_data=f'{User.ID} ban 1 0'),
                    InlineKeyboardButton(text="–Ω–µ –∞–Ω–∞–Ω–∏–º–Ω–æ",callback_data=f'{User.ID} ban 0 0'))
                    await bot.send_message(User.ChatID, '–ö–∞–∫ —Ä–∞–∑–±–∞–Ω–∏—Ç—å??', reply_markup=keyboard)
            elif (User.Mode == 9):
                data = str(User.Inf).split("|")
                if data[0] == "1":
                    if text in ["1", "2", "3"]:
                        data[1] = text
                        data[0] = "2"
                        sps = []
                        tabs = lbr.getTabls(int(text))
                        for i in range(len(tabs)):
                            sps.append(f"{i} - {tabs[i][0]}")
                        await bot.send_message(User.ChatID, "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–±–µ—Ü –¥–ª—è –∑–∞–ø–∏—Å–∏\n" + "\n".join(sps))
                    else:
                        await bot.send_message(User.ChatID, "–û—à–∏–±–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è")
                elif data[0] == "2":
                    if text.isdigit():
                        sps = []
                        tabs = lbr.getTabls(int(data[1]))
                        for i in range(len(tabs)):
                            sps.append(str(tabs[i][0]))
                        print(text, int(text), len(sps), int(text) < len(sps))
                        if int(text) >= 0 and int(text) < len(sps):
                            data[2] = sps[int(text)]
                            data[0] = "3"
                            await bot.send_message(User.ChatID, "–ù–∞–ø–∏—à–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏")
                        else:
                            await bot.send_message(User.ChatID, "–û—à–∏–±–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è")
                    else:
                        await bot.send_message(User.ChatID, "–û—à–∏–±–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è")
                elif data[0] == "3":
                    data[3] = text
                    data[0] = "4"
                    spsB = lbr.getAll(int(data[1]))
                    print(spsB)
                    sps = ["ID - <–∑–Ω–∞—á–µ–Ω–∏—è>"]
                    for i in spsB:
                        i = list(map(str, i))
                        x = "|".join(i[1:])
                        sps.append(f"{i[0]} - {x}")
                    s = "\n".join(sps)
                    await bot.send_message(User.ChatID, f'''–ù–∞–ø–∏—à–∏—Ç–µ —É—Å–ª–æ–≤–∏–µ –¥–ª—è –∑–∞–ø–∏—Å–∏: \nTrue - –∑–∞–ø–∏—Å—å –±–µ–∑ —É—Å–ª–æ–≤–∏—è, \n—á–∏—Å–ª–æ - ID –¥–ª—è –∑–∞–ø–∏—Å–∏, \n—Å—Ç—Ä–æ–∫–∞ - —É—Å–ª–æ–≤–∏–µ (SQ3)\n {s}''')
                elif data[0] == "4":
                    if text.isdigit():
                        data[4] = text
                    elif text == "True":
                        data[4] = "1 = 1"
                    else:
                        data[4] = text
                    data[0] = "5"
                if data[0] == "5":
                    lbr.writeData(1, "Mode", 0, User.ID)
                    lbr.writeData(1, "Inf", "-1", User.ID)
                    try:
                        lbr.writeData(int(data[1]), data[2], data[3], data[4])

                        await bot.send_message(User.ChatID, '''‚úÖ–£—Å–ø–µ—à–Ω–æ‚úÖ''')
                    except Exception as e:
                        await bot.send_message(User.ChatID, f'''‚ùå–û—à–∏–±–∫–∞‚ùå\n{e}''')
                lbr.writeData(1, "Inf", "|".join(data), User.ID)
            elif (User.Mode == 10):
                dataFuc = str(User.Inf).split("|")
                print(dataFuc)
                if dataFuc[0] == "1":
                    if text in ["1", "2", "3"]:
                        print(text, "-> dataFuc[1]")
                        dataFuc[1] = text
                        dataFuc[0] = "2"
                        sps = []
                    else:
                        await bot.send_message(User.ChatID, "–û—à–∏–±–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è")
                if dataFuc[0] == "2":
                    file_path = os.path.realpath('data.xlsx')
                    tabB = lbr.getTabls(int(dataFuc[1]))
                    tab = []
                    data = dict()
                    for i in tabB:
                        tab.append(i[0])
                    dataB = lbr.getAll(int(dataFuc[1]))
                    print(dataB)
                    print(tab)
                    for iT in range(len(tab)):
                        data[tab[iT]] = []
                        for iD in range(len(dataB)):
                            print(f"data[{tab[iT]}] = {str(dataB[iD][iT])}")
                            data[tab[iT]].append(str(dataB[iD][iT]))
                    print(*data, sep="\n")
                    df = pd.DataFrame(data)
                    with pd.ExcelWriter(file_path, mode="a", engine="openpyxl",if_sheet_exists="replace",) as writer:
                        df.style.set_properties(**{'border': '1.3px solid black', 'color': 'black'}).to_excel(writer, sheet_name="Data",index=False)
                        print(data, "->", file_path)
                    with open(file_path, 'rb') as f1:
                        await bot.send_document(User.ChatID, f1)
                    lbr.writeData(1, "Mode", 0, User.ID)
        print(cnt_Global)
        cnt_Global += 1
    except Exception as e:
    #finally: #WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW
        if e is None:
            pass
        else:
            print(e)

            for i in adminsChatID:
                await bot.send_message(i, f"{sss}.\n–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {cnt_Global} –∑–∞–ø—Ä–æ—Å–æ–≤ /ping\n–û—à–∏–±–∫–∞:\n{e}")



@dp.callback_query_handler(lambda c: True)
async def process_callback_query(call: types.CallbackQuery):
    try:
        global admins
        global adminsChatID
        message = call.message
        input = call.data.split()

        User = UserClass(int(input[0]))
        print(User.ID, User.Name, ":", input)
        if input[1] == "change":
            if input[2] == "Name":
                await  bot.edit_message_text('–ù–∞–ø–∏—à–∏—Ç–µ –§–ò –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω"', chat_id=User.ChatID, message_id=message.message_id)
                lbr.writeData(1, "Mode", 1, User.ID)
            elif input[2] == "Klass":
                await  bot.edit_message_text('–ù–∞–ø–∏—à–∏—Ç–µ –∫–ª–∞—Å—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ "7–ë" (–ª–∏—Ç–µ—Ä–∞ –∫–ª–∞—Å—Å–∞ - –∑–∞–≥–ª–∞–≤–Ω–∞—è, —Ä—É—Å—Å–∫–∞—è –±—É–∫–≤–∞)', chat_id=User.ChatID, message_id=message.message_id)
                lbr.writeData(1, "Mode", 2, User.ID)
            elif input[2] == "end":
                lbr.writeData(1, "AlreadyRegistraate", 1, User.ID)
                lbr.writeData(1, "Mode", 0, User.ID)
                await textLoad(message)
                await bot.edit_message_text('–û–ö', chat_id=User.ChatID, message_id=message.message_id)

        elif input[1] == "select":

            if Code[1:] == "14":
                days = 6
            elif Code[1:] == "29":
                days = 6


            await  bot.edit_message_text('–û–ö', chat_id=User.ChatID, message_id=message.message_id)
            if input[2] == "free":
                lbr.writeData(2, "ID", User.ID, User.ID)
            lbr.writeData(2, input[2], input[3], User.ID)
            if input[2] == "free":

                day = 1
                week = 1
                if User.AlreadySelected == 1 and Code[1:] == "29":
                    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –∏ –Ω–æ–º–µ—Ä–∞ –Ω–µ–¥–µ–ª–∏
                    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
                    today = datetime.datetime.now().date()
                    # \–û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–æ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è 1 —Å–µ–Ω—Ç—è–±—Ä—è —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞
                    start_date = datetime.date(today.year, 9, 1)
                    # –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–º–µ—Ä –Ω–µ–¥–µ–ª–∏, –Ω–∞—á–∏–Ω–∞—è —Å 1 —Å–µ–Ω—Ç—è–±—Ä—è
                    week_num = (today - start_date).days // 7 + 1
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
                    day_num = today.weekday() + 1
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π —ç—Ç–æ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
                    if week_num % 2 == 1:
                        if day_num == 1:
                            print("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 1-–π –Ω–µ–¥–µ–ª–∏")
                            day = 1
                            week = 1
                        elif day_num == 2:
                            print("–í—Ç–æ—Ä–Ω–∏–∫ 1-–π –Ω–µ–¥–µ–ª–∏")
                            day = 2
                            week = 1
                        elif day_num == 3:
                            print("–°—Ä–µ–¥–∞ 1-–π –Ω–µ–¥–µ–ª–∏")
                            day = 3
                            week = 1
                        elif day_num == 4:
                            print("–ß–µ—Ç–≤–µ—Ä–≥ 1-–π –Ω–µ–¥–µ–ª–∏")
                            day = 4
                            week = 1
                        elif day_num == 5:
                            print("–ü—è—Ç–Ω–∏—Ü–∞ 1-–π –Ω–µ–¥–µ–ª–∏")
                            day = 5
                            week = 1
                        elif day_num == 6:
                            print("–°—É–±–±–æ—Ç–∞ 1-–π –Ω–µ–¥–µ–ª–∏")
                            day = 1
                            week = 2
                        elif day_num == 7:
                            print("–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ 1-–π –Ω–µ–¥–µ–ª–∏")
                            day = 1
                            week = 2
                    else:
                        if day_num == 1:
                            print("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 2-–π –Ω–µ–¥–µ–ª–∏")
                            day = 1
                            week = 2
                        elif day_num == 2:
                            print("–í—Ç–æ—Ä–Ω–∏–∫ 2-–π –Ω–µ–¥–µ–ª–∏")
                            day = 2
                            week = 2
                        elif day_num == 3:
                            print("–°—Ä–µ–¥–∞ 2-–π –Ω–µ–¥–µ–ª–∏")
                            day = 3
                            week = 2
                        elif day_num == 4:
                            print("–ß–µ—Ç–≤–µ—Ä–≥ 2-–π –Ω–µ–¥–µ–ª–∏")
                            day = 4
                            week = 2
                        elif day_num == 5:
                            print("–ü—è—Ç–Ω–∏—Ü–∞ 2-–π –Ω–µ–¥–µ–ª–∏")
                            day = 5
                            week = 2
                        elif day_num == 6:
                            print("–°—É–±–±–æ—Ç–∞ 2-–π –Ω–µ–¥–µ–ª–∏")
                            day = 1
                            week = 1
                        elif day_num == 7:
                            print("–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ 2-–π –Ω–µ–¥–µ–ª–∏")
                            day = 1
                            week = 1


            else:
                week = int(input[2][0])
                day = int(input[2][1])
                if input[3] == "nazad":
                    day -= 1
                    if day == 0 and week == 2:
                        week = 1
                        day = 5
                    if day == 0 and week == 1:
                        week = 1
                        day = 1
                    if week == 1 and day == 0:
                        week = 2
                        day = 1
                else:
                    day += 1
                    if day == 6 and week == 1:
                        day = 1
                        week = 2

                week += day // days
                day %= days

                print(week, day)
                admins = lbr.getData(1, "ChatID", "`Admin` = 1")
                for i in range(len(admins)):
                    await bot.send_message(admins[i], f"+1")

            if week == 3 and day == 0:
                await bot.send_message(User.ChatID, '–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –≤—ã–±–æ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤')
                lbr.writeData(1, "AlreadySelected", 1, User.ID)
                lbr.writeData(1, "Mode", 0, User.ID)
                admins = lbr.getData(1, "ChatID", "`Admin` = 1")
                for i in range(len(admins)):
                    await bot.send_message(admins[i], f"üëã–ü—Ä–∏–≤–µ—Çüëã, –µ—â—ë –æ–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫ –≤—ã–±—Ä–∞–ª –≤–∞—Ä–∏–∞–Ω—Ç—ã, –ø–µ—á–∞—Ç–∞–π –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É /exel")


            else:
                if Code[1:] == "14":
                    keyboard = InlineKeyboardMarkup(row_width = 4)
                    keyboard.add(
                    InlineKeyboardButton(text="1 + —Å—É–ø",
                                                                callback_data=f'{User.ID} select {week}{day} 101'),
                    InlineKeyboardButton(text="1 - —Å—É–ø",
                                                                callback_data=f'{User.ID} select {week}{day} 91'),
                    InlineKeyboardButton(text="2 + —Å—É–ø",
                                                                callback_data=f'{User.ID} select {week}{day} 102'),
                    InlineKeyboardButton(text="2 - —Å—É–ø",
                                                                callback_data=f'{User.ID} select {week}{day} 92'))

                    await bot.send_message(User.ChatID, f'–í–µ–±–µ—Ä–µ—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç {week} –Ω–µ–¥. {day} –¥–µ–Ω—å:'
                                                f'\n–°–£–ü - {lbr.getData(3, "Value", week*100 + day*10 + 3)[0]}'
                                                f'\n–ü–ï–†–í–û–ï - {lbr.getData(3, "Value", week*100 + day*10 + 1)[0]}'
                                                f'\n–í–¢–û–†–û–ï - {lbr.getData(3, "Value", week*100 + day*10 + 2)[0]}'
                                    , reply_markup=keyboard)
                elif Code[1:] == "29":
                    keyboard = InlineKeyboardMarkup(row_width = 3)
                    keyboard.add(
                    InlineKeyboardButton(text="—Å—É–ø",callback_data=f'{User.ID} select {week}{day} 1'),
                    InlineKeyboardButton(text="–±–µ–∑ —Å—É–ø–∞",callback_data=f'{User.ID} select {week}{day} 0'),
                    InlineKeyboardButton(text="–ù–µ –æ–±–µ–¥–∞—é", callback_data=f'{User.ID} select {week}{day} -'),
                    InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f'{User.ID} select {week}{day} nazad'))
                    await bot.send_message(User.ChatID, f'–í–µ–±–µ—Ä–µ—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç {week} –Ω–µ–¥. {day} –¥–µ–Ω—å:'
                                                f'\n–°–£–ü - {lbr.getData(3, "Value", week*100 + day*10 + 1)[0]}'
                                                f'\n–ë–õ–Æ–î–û - {lbr.getData(3, "Value", week*100 + day*10 + 2)[0]}', reply_markup=keyboard)
                    days = 6
                    await bot.edit_message_text('–û–ö',chat_id=User.ChatID, message_id=message.message_id)


        elif input[1] == "unban":
            if User.Mode == -2:
                lbr.writeData(1, "Mode", -2, User.ID)
                await bot.send_message(BanUser.ChatID, "–¢—ã —Ä–∞–∑–±–∞–Ω–µ–Ω")
                for i in range(len(admins)):
                   await  bot.edit_message_text(f'''–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {User.ID} {User.Name} {User.Klass}{User.KlassLit} - —Ä–∞–∑–±–∞–Ω–µ–Ω''', chat_id=User.ChatID, message_id=message.message_id)
            else:
               await  bot.edit_message_text(f'''–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Ä–∞–∑–±–∞–Ω–µ–Ω''', chat_id=User.ChatID, message_id=message.message_id)
            lbr.writeData(1, "Mode", 0, User.ID)
        elif input[1] == "ban":
            data = str(User.Inf).split("|")

            data[2] = bool(int(input[2]))
            print(data)
            BanUser = UserClass(int(data[1]))
            if input[3] == '1':
                lbr.writeData(1, "Mode", -2, BanUser.ID)
                await bot.send_message(BanUser.ChatID, f'''–¢—ã –∑–∞–±–∞–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {"" if data[2] else str(User.Name)}''')
                await  bot.edit_message_text(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –°–õ–û–í–ò–õ –ë–ê–ù !!!', chat_id=User.ChatID, message_id=message.message_id)
            else:
                lbr.writeData(1, "Mode", 0, BanUser.ID)
                await bot.send_message(BanUser.ChatID, f'''–¢—ã —Ä–∞–∑–±–∞–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {"" if data[2] else str(User.Name)}''')
                await  bot.edit_message_text(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–∞–Ω–µ–Ω', chat_id=User.ChatID, message_id=message.message_id)
            lbr.writeData(1, "Mode", 0, User.ID)
        global cnt_Global
        cnt_Global += 1
    except Exception as e:
        if e is None:
            pass
        else:
            print(e)
            await bot.send_message(User.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É")
            for i in adminsChatID:
                await bot.send_message(i, f"{sss}. \n–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {cnt_Global} —Å–æ–æ–±—â–µ–Ω–∏–π\n–û—à–∏–±–∫–∞:\n{e}")

stop = False

async def PollingLoaderFunc():
    await dp.start_polling()

async def ConsolLoaderFunc():
    while True:
        await Consol()

async def PINGLoaderFunc():
    await asyncio.sleep(2)
    while True:
        await PING()
        await asyncio.sleep(60 * 10)

async def PING():
    print("PING")
    timeProg = int(time.time() - start_time) // 60
    IDList = str(lbr.getData(3, "Value", '''ID = "PID"''')[0]).split("|")
    ChatIdList = []
    if IDList != [""]:
        for i in IDList:
            ChatIdList.append(lbr.getData(1, "ChatID", str(i))[0])
        for i in ChatIdList:
            print("Send information to", i)
            await bot.send_message(i, f"–°—Ç–∞–±–∏–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ {cnt_Global} –∑–∞–ø—Ä–æ—Å–æ–≤."
                                       f"\n–í—Ä–µ–º—è —Å–æ —Å—Ç–∞—Ä—Ç–∞:"
                                       f"\n{int(timeProg // 60 // 24)} —Å—É—Ç."
                                       f"\n{int(timeProg // 60 % 24)} —á–∞—Å–æ–≤."
                                       f"\n{int(timeProg % 60)} –º–∏–Ω—É—Ç.")
    else:
        print("Send information to noone")

async def Consol():
    inp = await aioconsole.ainput()
    if inp == "fall":
        admins = lbr.getData(1, "ChatID", "`Admin` = 1")
        timeProg = int(time.time() - start_time) // 60
        for i in admins:
            await bot.send_message(i, f"{sss}. \n–Ø –≤—ã–∫–ª—é—á–∞—é—Å—å –æ—Ç –∫–æ–Ω—Å–æ–ª–∏. \n–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {cnt_Global} –∑–∞–ø—Ä–æ—Å–æ–≤."
                                      f"\n–í—Ä–µ–º—è —Å–æ —Å—Ç–∞—Ä—Ç–∞:"
                                      f"\n{int(timeProg // 60 // 24)} —Å—É—Ç."
                                      f"\n{int(timeProg // 60 % 24)} —á–∞—Å–æ–≤."
                                      f"\n{int(timeProg % 60)} –º–∏–Ω—É—Ç.")
        await stopFunc()
    else:
        print("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞(")

async def startFunc():
    global stop
    global start_time
    start_time = time.time()
    print("Start 'Polling'")
    polling_task = asyncio.create_task(PollingLoaderFunc())
    print("Start 'Polling' -> success")
    print("Start 'ConsolLoader'")
    consol_task = asyncio.create_task(ConsolLoaderFunc())
    print("Start 'ConsolLoader' -> success")
    print("Start 'PING'")
    ping_task = asyncio.create_task(PINGLoaderFunc())
    print("Start 'PING' -> success")
    print("All start without problems")
    admins = lbr.getData(1, "ChatID", "`Admin` = 1")
    for i in range(len(admins)):
        await bot.send_message(admins[i], f"{sss}. \n–Ø –∑–∞–ø—É—Å—Ç–∏–ª—Å—è\n/ping")
    print("'fall' to stop ALL")
    print("–û–Ω –ø–∏—à–µ—Ç –≤—Å–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø—Ä–∏–∫–æ–ª—å–Ω–æ, —Ç–∏–ø–æ —Ö–∞—Ü–∫–µ—Ä—ã")
    while not stop:
        await asyncio.sleep(1)
    exit(0)

async def stopFunc():
    print("STOP")
    global stop
    stop = True
    await dp.stop_polling()
    await bot.close()

if __name__ == '__main__':
    asyncio.run(startFunc())


